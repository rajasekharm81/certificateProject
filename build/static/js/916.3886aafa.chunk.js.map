{"version":3,"file":"static/js/916.3886aafa.chunk.js","mappings":"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","sources":["components/employeeLogin/index.js","components/loadingView/index.js"],"sourcesContent":["/* eslint-disable default-case */\r\nimport * as React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport {Box,Button,TextField,Snackbar,Alert, IconButton,FormControl,InputLabel,OutlinedInput,InputAdornment} from '@mui/material';\r\nimport LoadingView from \"../loadingView\"\r\n\r\nimport \"./index.css\"\r\n\r\nimport {AiFillEye,AiFillEyeInvisible} from 'react-icons/ai'\r\nimport Cookies from \"js-cookie\"\r\nimport logopng from \"../../assects/logopng.png\"\r\n// import OTPModule from \"../otphandler\"\r\nimport axios from \"axios\"\r\n\r\n\r\nclass EmployeeSigninForm extends React.Component{\r\n    state={enrollNo:\"\",\r\n          password:'',\r\n          isLoading:false,\r\n          backErr:false,\r\n          backErrMsg:\"\",\r\n          passwordVisable:false,\r\n          validUser:false,\r\n          forgotPassword:false,\r\n          isStudent:false\r\n        }\r\n\r\n    componentDidMount=()=>{\r\n        this.isUserLogedIn()\r\n    }\r\n\r\n    isUserLogedIn=()=>{\r\n      const token = Cookies.get(\"authToken\")\r\n      if(token===undefined){\r\n        this.setState({validUser:false})\r\n      }else{\r\n        this.setState({validUser:true})\r\n      }\r\n    }\r\n\r\n    verifyUser=async()=>{\r\n      const {enrollNo,password}=this.state\r\n      this.setState({isLoading:true})\r\n      try{\r\n        const options = {\r\n          url : `${process.env.REACT_APP_BASEURL}staff/login/`,\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8'\r\n          },\r\n          data: {\r\n                enrollment: enrollNo,\r\n                password: password\r\n              }\r\n        }\r\n        const response = await axios(options);  \r\n        if(response.statusText===\"OK\"){\r\n          Cookies.set(\"staffAuthToken\",response.data.auth_token, {expires:1})\r\n          this.setState({isLoading:false,validUser:true})\r\n        }\r\n        console.log(response)\r\n      }\r\n      catch(e){\r\n        if(e.message==='Network Error'){\r\n         this.setState({isLoading:false,backErr:true,backErrMsg:\"Something went wrong Please try again\"})\r\n        }\r\n        if(e.response.status===500){\r\n          this.setState({isLoading:false,backErr:true,backErrMsg:\"Unregistered user... Contact admin for login\"})\r\n        }\r\n        if(e.response.status===403){\r\n          this.setState({isLoading:false,backErr:true,backErrMsg:\"Incorrect Password... Please try again\"})\r\n        }else{\r\n          this.setState({isLoading:false,backErr:true,backErrMsg:e.message})\r\n        }\r\n            \r\n      }\r\n    }\r\n\r\n    onLogin=()=>{\r\n      const {enrollNo,password}=this.state\r\n      if(enrollNo===\"\"){\r\n        this.setState({enrollNoErr:true})\r\n      }\r\n      if(enrollNo!==\"\"){\r\n        this.setState({enrollNoErr:false})\r\n      }\r\n      if(password===\"\"){\r\n        this.setState({passwordErr:true})\r\n      }\r\n      if(password!==\"\"){\r\n        this.setState({passwordErr:false})\r\n      }\r\n      if(enrollNo!==\"\" && password!==\"\"){\r\n        this.verifyUser()\r\n      }\r\n    }\r\n\r\n    toggleForgotpassword=()=>{\r\n      this.setState({forgotPassword:true})\r\n    }\r\n\r\n    role=()=>{\r\n      this.setState({isStudent:true})\r\n    }\r\n\r\n\r\n    signInView=()=>{\r\n       const {enrollNo,enrollNoErr,password,passwordErr,passwordVisable,forgotPassword,isStudent}=this.state\r\n      return (\r\n        <>\r\n        {forgotPassword?<Navigate to='/student/forgotPassword'/>:null}\r\n        {isStudent?<Navigate to='/student/signin'/>:null}\r\n        <div className='AuthPageSignin'>\r\n           <img className='authLogo' alt=\"Logo\" src={logopng}/>\r\n           <Button variant='contained' style={{position:\"absolute\", right:'15px', top:\"15px\", fontSize:\"18px\", fontWeight:\"bold\"}} onClick={this.role}>Student Login</Button>\r\n           <Box className='AuthpageSigninForm'>\r\n                <h1>Employee Log in</h1>\r\n           <TextField\r\n                  required\r\n                  id=\"employee-login-username\"\r\n                  label=\"User Name\"\r\n                  style={{margin:\"30px 0 0 0\"}}\r\n                  onChange={(event)=>this.setState({enrollNo:event.target.value.toUpperCase()})}\r\n                  value={enrollNo}\r\n                  error={enrollNoErr}\r\n                  autofill=\"false\"\r\n                  fullWidth\r\n                  />\r\n\r\n            <FormControl  style={{margin:\"30px 0 0 0\"}} variant=\"outlined\">\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                value={password}\r\n                error={passwordErr}\r\n                type={passwordVisable ? 'text' : 'password'}\r\n                onChange={(event)=>this.setState({password:event.target.value})}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={()=>{this.setState((prevState)=>({passwordVisable:!prevState.passwordVisable}))}}\r\n                      edge=\"end\"\r\n                    >\r\n                      {passwordVisable ? <AiFillEye style={{fontSize:\"28px\"}} /> : <AiFillEyeInvisible style={{fontSize:\"28px\"}} />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n            }\r\n            label=\"Password\"\r\n          />\r\n            </FormControl>\r\n            <div className='authPageBtnContainer'>\r\n                <Button variant=\"contained\" onClick={this.onLogin} style={{width:\"30%\", marginTop:\"20px\"}} >\r\n                    Login\r\n                </Button>\r\n                {/* <Button size='small' variant=\"contained\" onClick={this.toggleForgotpassword} style={{width:\"30%\", marginTop:\"20px\"}} >\r\n                    Forgot Password\r\n                </Button> */}\r\n            </div>\r\n            </Box>\r\n        </div>\r\n         </>\r\n      )\r\n    }\r\n\r\n    handleClose=()=>{\r\n      this.setState({backErr:false})\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const{isLoading,backErr,backErrMsg,validUser}=this.state\r\n          return(\r\n            <>\r\n            { this.signInView()}\r\n            <LoadingView isLoading={isLoading}/>\r\n              <Snackbar open={backErr}\r\n                        autoHideDuration={6000} \r\n                        onClose={this.handleClose} \r\n                        anchorOrigin={{vertical:\"top\",horizontal:\"right\"}} \r\n                        >\r\n                <Alert onClose={this.handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                  {backErrMsg}\r\n                </Alert>\r\n              </Snackbar>\r\n            {validUser?<Navigate to='/approvalsection/dashboard'/>:null}\r\n            </>\r\n             \r\n            )\r\n  }\r\n}\r\n\r\nexport default EmployeeSigninForm","import {Component} from 'react'\r\nimport { Backdrop,CircularProgress } from '@mui/material'\r\n\r\nclass LoadingView extends Component{\r\n    render(){\r\n        const{isLoading}=this.props\r\n        return(\r\n            <Backdrop\r\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={isLoading}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadingView\r\n"],"names":["EmployeeSigninForm","state","enrollNo","password","isLoading","backErr","backErrMsg","passwordVisable","validUser","forgotPassword","isStudent","componentDidMount","isUserLogedIn","undefined","Cookies","setState","verifyUser","options","url","process","method","headers","data","enrollment","axios","response","statusText","auth_token","expires","console","log","message","status","onLogin","enrollNoErr","passwordErr","toggleForgotpassword","role","signInView","to","className","alt","src","logopng","Button","variant","style","position","right","top","fontSize","fontWeight","onClick","Box","TextField","required","id","label","margin","onChange","event","target","value","toUpperCase","error","autofill","fullWidth","FormControl","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","IconButton","prevState","edge","width","marginTop","handleClose","this","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","sx","React","LoadingView","props","color","zIndex","theme","drawer","Component"],"sourceRoot":""}