{"version":3,"file":"static/js/640.25439356.chunk.js","mappings":"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","sources":["components/SignupPage/index.js","components/customizedComponents/index.js","components/loadingView/index.js","components/otphandler/index.js"],"sourcesContent":["import {Component} from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Box,Button,Snackbar,Alert } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport validator from 'validator';\r\nimport {format} from 'date-fns'\r\n\r\n\r\nimport registrationt from \"../../assects/registrationt.png\"\r\nimport logopng from '../../assects/logopng.png'\r\n\r\nimport OTPModule from \"../otphandler\"\r\nimport LoadingView from '../loadingView';\r\n\r\nimport { CssTextField } from '../customizedComponents';\r\nimport {theme} from \"../customizedComponents\"\r\n\r\nimport \"./index.css\"\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nclass SignUpFrom extends Component{\r\n    state={name:\"\",\r\n            fatherName:\"\",\r\n            email:\"\",\r\n            enrollmentNo:\"\",\r\n            dob:'',\r\n            mobileNo:'',\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            nameErr:false,\r\n            fatherNameErr:false,\r\n            emailErr:false,\r\n            enrollmentNoErr:false,\r\n            dobErr:false,\r\n            mobileNoErr:false,\r\n            passwordErr:false,\r\n            confirmPasswordErr:false,\r\n            passwordMatched:true,\r\n            allDataEntered:false,\r\n            otpSent:false,\r\n            otpVerifiedSuccessfully:false,\r\n            backErr:false,\r\n            backErrMsg:\"\",\r\n            severity:\"\",\r\n            alreadyRegistered:false,\r\n            isLoading:false\r\n        }\r\n\r\n        navigateToSignIn=()=>{\r\n           setTimeout(() => {\r\n                this.setState({otpVerifiedSuccessfully:true});\r\n            }, 3000);\r\n        }\r\n\r\n        updateEmail=(event)=>{\r\n            const email = validator.isEmail(event.target.value)\r\n            if(email){\r\n                this.setState({email:event.target.value,emailErr:false})\r\n            }else{\r\n                this.setState({email:event.target.value,emailErr:true})\r\n            }\r\n        }\r\n\r\n        updateMobilenumber=(event)=>{\r\n            const mobile = validator.isMobilePhone(event.target.value,'en-IN')\r\n            if(mobile){\r\n                this.setState({mobileNo:event.target.value,mobileNoErr:false})\r\n            }else{\r\n                this.setState({mobileNo:event.target.value,mobileNoErr:true})\r\n            }\r\n        }\r\n        \r\n        updateDob=(event)=>{\r\n            this.setState({dob:event.target.value})\r\n        }\r\n\r\n        reset=()=>{\r\n            this.setState({ name:\"\",\r\n                            fatherName:\"\",\r\n                            email:\"\",\r\n                            enrollmentNo:\"\",\r\n                            dob:'',\r\n                            mobileNo:'',\r\n                            password:\"\",\r\n                            confirmPassword:\"\",\r\n                            nameErr:false,\r\n                            fatherNameErr:false,\r\n                            emailErr:false,\r\n                            enrollmentNoErr:false,\r\n                            dobErr:false,\r\n                            mobileNoErr:false,\r\n                            passwordErr:false,\r\n                            confirmPasswordErr:false,\r\n                            passwordMatched:true\r\n                        })\r\n        }\r\n\r\n        callForOtp=async ()=>{\r\n            const {name,fatherName,email,dob,mobileNo,password,enrollmentNo}=this.state\r\n            try{\r\n                const options = {\r\n                url:`${process.env.REACT_APP_BASEURL}account/register/`,\r\n                method:\"POST\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json;charset=UTF-8'\r\n                    },\r\n                data:{name: name,\r\n                        father_name: fatherName,\r\n                        email: email,\r\n                        enrollment: enrollmentNo,\r\n                        mobile: mobileNo,\r\n                        password:password,\r\n                        confirm_password: password,\r\n                        date_of_birth: format(new Date(dob), 'dd/MM/yyyy')\r\n                    }\r\n            }\r\n            const response = await axios(options)\r\n                console.log(response)\r\n                this.setState({otpSent:true,isLoading:false})\r\n            }catch(e){\r\n                this.setState({backErr:true,backErrMsg:e.msg,isLoading:false,severity:\"error\"})\r\n            }\r\n            \r\n        }\r\n\r\n        onSubmit=()=>{\r\n            const {name,fatherName,email,enrollmentNo,dob,mobileNo,emailErr,mobileNoErr,password,confirmPassword} = this.state\r\n            this.setState({isLoading:true})\r\n            if(name===\"\"){\r\n                this.setState({nameErr:true})\r\n            }\r\n            if(name!==\"\"){\r\n                this.setState({nameErr:false})\r\n            }\r\n            if(fatherName===\"\"){\r\n                this.setState({fatherNameErr:true})\r\n            }\r\n            if(fatherName!==\"\"){\r\n                this.setState({fatherNameErr:false})\r\n            }\r\n            if(email===\"\"){\r\n                this.setState({emailErr:true})\r\n            }\r\n            if(email!==\"\"){\r\n                this.setState({emailErr:false})\r\n            }\r\n            if(enrollmentNo===\"\"){\r\n                this.setState({enrollmentNoErr:true})\r\n            }\r\n            if(enrollmentNo!==\"\"){\r\n                this.setState({enrollmentNoErr:false})\r\n            }\r\n            if(dob===\"\"){\r\n                this.setState({dobErr:true})\r\n            }\r\n            if(dob!==\"\"){\r\n                this.setState({dobErr:false})\r\n            }\r\n            if(mobileNo===''){\r\n                this.setState({mobileNoErr:true})\r\n            }\r\n            if(mobileNo!=='' && mobileNoErr===false){\r\n                this.setState({mobileNoErr:false})\r\n            }\r\n            if(password===\"\"){\r\n                this.setState({passwordErr:true})\r\n            }\r\n            if(password!==\"\"){\r\n                this.setState({passwordErr:false})\r\n            }\r\n            if(confirmPassword===\"\"){\r\n                this.setState({confirmPasswordErr:true})\r\n            }\r\n            if(confirmPassword!==\"\"){\r\n                this.setState({confirmPasswordErr:false})\r\n            }\r\n            if(password === confirmPassword){\r\n                this.setState({passwordMatched:true})\r\n            }\r\n            if(password!==confirmPassword){\r\n                this.setState({passwordMatched:false})\r\n            }\r\n            if(name!==\"\" && fatherName!==\"\" && enrollmentNo!==\"\" && emailErr===false && dob!==\"\" && mobileNoErr===false && password===confirmPassword && password!==\"\" && confirmPassword!==''){\r\n                this.setState({allDataEntered:true},this.callForOtp)\r\n                console.log(\"error\")\r\n            }\r\n            else{\r\n                this.setState({ backErr:true,isLoading:false,backErrMsg:\"Something went wrong. Please try again\", severity:\"error\"})\r\n            }\r\n        }\r\n\r\n        registerForm=()=>{\r\n            const {name,\r\n                    fatherName,\r\n                    email,\r\n                    enrollmentNo,\r\n                    dob,\r\n                    mobileNo,\r\n                    nameErr,\r\n                    fatherNameErr,\r\n                    emailErr,\r\n                    enrollmentNoErr,\r\n                    dobErr,\r\n                    mobileNoErr,\r\n                    password,\r\n                    confirmPassword,\r\n                    passwordErr,\r\n                    confirmPasswordErr,\r\n                    passwordMatched}=this.state\r\n            return(\r\n                <Box className=\"registrationForm\"> \r\n                        <h1 style={{padding:\"10px\"}}>Please Register</h1>\r\n        {/* name */}    \r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%'}}>     \r\n                            <label id=\"reg-student-name\">Name</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-student-name\"\r\n                                placeholder=\"Name\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                onChange={(event)=>this.setState({name:event.target.value.toUpperCase()})}\r\n                                value={name}\r\n                                error={nameErr}\r\n                                />\r\n                        </div>\r\n                            \r\n    {/* fatherName */}\r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-name\">Father Name</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-father-name\"\r\n                                placeholder=\"Father Name\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                onChange={(event)=>this.setState({fatherName:event.target.value.toUpperCase()})}\r\n                                value={fatherName}\r\n                                error={fatherNameErr}\r\n                                />\r\n                        </div>\r\n    {/* emailId */}     \r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-email\">Email ID</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-student-email\"\r\n                                placeholder=\"Email id\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                onChange={this.updateEmail}\r\n                                value={email}\r\n                                error={emailErr}\r\n                                />\r\n                        </div>\r\n\r\n    {/* enrollmentNo */}\r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-enroll\">HallTicket Number</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-father-enroll\"\r\n                                placeholder=\"Hallticket Number\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                onChange={(event)=>this.setState({enrollmentNo:event.target.value.toUpperCase()})}\r\n                                value={enrollmentNo}\r\n                                error={enrollmentNoErr}\r\n                                />\r\n                        </div>\r\n    {/* Dob */}\r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-dob\">Date of Birth</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-student-dob\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                type=\"date\"\r\n                                onChange={this.updateDob}\r\n                                value={dob}\r\n                                error={dobErr}\r\n                                />\r\n                        </div>\r\n    {/* mobile */}\r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-mobile\">Mobile Number</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-student-mobile\"\r\n                                placeholder=\"Mobile\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                type=\"number\"\r\n                                value={mobileNo}\r\n                                onChange={this.updateMobilenumber}\r\n                                error={mobileNoErr}\r\n                            />\r\n                        </div>\r\n    {/* password */}\r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-password\">Create Password</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-student-password\"\r\n                                placeholder=\"Create Password\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                value={password}\r\n                                onChange={(event)=>this.setState({password:event.target.value})}\r\n                                error={passwordErr}\r\n                                />\r\n                            </div>\r\n    {/* confirm password */}\r\n                        <div style={{display:'flex',flexDirection:'column',width:'100%',margin:'15px 0 0 0'}}>     \r\n                            <label id=\"reg-student-ConfirmPassword\">Confirm Password</label>\r\n                            <CssTextField\r\n                                required\r\n                                size=\"small\"\r\n                                id=\"reg-student-ConfirmPassword\"\r\n                                placeholder=\"Confirm Password\"\r\n                                style={{margin:\"5px 0 0 0\"}}\r\n                                value={confirmPassword}\r\n                                onChange={(event)=>this.setState({confirmPassword:event.target.value})}\r\n                                error={confirmPasswordErr}\r\n                                />\r\n                        </div>\r\n                        {passwordMatched?null:<p>Passwords not Matched</p>}\r\n                        <div style={{width:\"80%\", display:\"flex\", justifyContent:\"space-around\",marginTop:\"20px\"}}>\r\n                            <Button onClick={this.reset} variant=\"contained\" color=\"reset\">Reset</Button>\r\n                            <Button onClick={this.onSubmit} variant=\"contained\" color=\"success\">Register</Button>\r\n                        </div>\r\n                            <Button color=\"lableText\" style={{fontSize:\"14px\",fontWeight:'bold'}} onClick={()=>this.setState({alreadyRegistered:true})}>Registered User??? Click me to sign in</Button>\r\n                        </Box>\r\n            )\r\n        }\r\n\r\n        verifyotp=async(otp)=>{\r\n            try{\r\n                const {enrollmentNo}=this.state\r\n                const options = {\r\n                    url : `${process.env.REACT_APP_BASEURL}account/verify/`,\r\n                    method:\"POST\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                        },\r\n                    data:{\r\n                            enrollment: enrollmentNo,\r\n                            otp:otp\r\n                        }\r\n                    }\r\n                const response = await axios(options)\r\n                if(response.status===200){\r\n                    this.setState({backErr:true,\r\n                                    backErrMsg:\"Registered Successfully. Please login to Continue\",\r\n                                    severity:'success'},this.navigateToSignIn)\r\n                }\r\n            }catch(e){\r\n                if(e.response.request.status===403){\r\n                    this.setState({backErr:true,backErrMsg:e.response.data.detail.toUpperCase(),severity:'error'})\r\n                }else{\r\n                    this.setState({backErr:true,backErrMsg:e.msg})\r\n                }\r\n                \r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        handleClose=()=>{\r\n            this.setState({backErr:false})\r\n        }\r\n\r\n    render(){\r\n        const{otpSent,otpVerifiedSuccessfully,backErr,backErrMsg,alreadyRegistered,severity,isLoading}=this.state\r\n        return(\r\n            <>\r\n             <ThemeProvider theme={theme}>\r\n                <div className='SignupMainPage'>\r\n                    <img style={{height:'150px'}} className='universityLogo' src={logopng} alt=\"logo\"/>\r\n                    <img className='registrationImage' src={registrationt} alt='regImage'/>\r\n                    {otpSent?<OTPModule resendOtp={this.callForOtp} verifyotp={this.verifyotp} />:this.registerForm()}\r\n                    {otpVerifiedSuccessfully?<Navigate to=\"/student/signin\"/>:null}\r\n                    {alreadyRegistered?<Navigate to=\"/student/signin\"/>:null}\r\n                </div>  \r\n            </ThemeProvider>\r\n            <Snackbar open={backErr}\r\n                        autoHideDuration={6000} \r\n                        onClose={this.handleClose} \r\n                        anchorOrigin={{vertical:\"top\",horizontal:\"right\"}} \r\n                        >\r\n                <Alert onClose={this.handleClose} severity={severity} sx={{ width: '100%' }}>\r\n                  {backErrMsg}\r\n                </Alert>\r\n              </Snackbar>\r\n              <LoadingView isLoading={isLoading}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpFrom","import { styled,TextField } from '@mui/material';\r\nimport {createTheme,Select} from '@mui/material';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    regTextField: {\r\n      // Purple and green play nicely together.\r\n      main: \"#1173ef\",\r\n      contrastText: '#fff',\r\n    },\r\n    lableText:{\r\n        main:\"#2B2E7A\"\r\n    },\r\n    success: {\r\n      main: '#11cb5f',\r\n      contrastText: '#ffffff',\r\n    },\r\n    reset:{\r\n        main: '#FFE6CC',\r\n        contrastText: '#D46300',\r\n    }\r\n  },\r\n});\r\n\r\nexport const CssTextField = styled(TextField)({\r\n  '& label.Mui-focused': {\r\n    color: 'blue',\r\n  },\r\n  '& .MuiOutlinedInput-root': {\r\n    fontSize:'14px',\r\n    color:'black',\r\n    '& fieldset': {\r\n      border:'1px solid black',\r\n      color:\"black\",\r\n      fontSize:'29px',\r\n    },\r\n    '&:hover fieldset': {\r\n      border:'2px solid blue'\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: 'blue',\r\n    },\r\n  },\r\n});\r\n\r\nexport const CssSelect = styled(Select)({\r\n  '& ..MuiSelect-select': {\r\n      border:'1px solid red',\r\n      backgroundColor:\"red\",\r\n  }\r\n});","import {Component} from 'react'\r\nimport { Backdrop,CircularProgress } from '@mui/material'\r\n\r\nclass LoadingView extends Component{\r\n    render(){\r\n        const{isLoading}=this.props\r\n        return(\r\n            <Backdrop\r\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={isLoading}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadingView\r\n","/* eslint-disable no-sequences */\r\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\r\nimport {Button} from \"@mui/material\"\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst renderButton = (buttonProps) => {\r\n  return <Button {...buttonProps} size=\"small\">Resend</Button>;\r\n};\r\nconst renderTime = (remainingtime) => {\r\n  return <span>{remainingtime} seconds remaining</span>;\r\n};\r\n\r\n\r\nfunction OTPModule(props) {\r\n\r\n  const [OTP, setOTP] = useState(\"\");\r\n\r\n      const sendOtp=()=>{\r\n            const {verifyotp}=props\r\n            verifyotp(OTP)\r\n      }\r\n  \r\n      const resendOtp=()=>{\r\n        const {resendOtp}=props\r\n        resendOtp()\r\n      }\r\n\r\n  return (\r\n    <div style={{display:\"flex\", flexDirection:\"column\",width:'300px',justifyContent:\"center\",alignItems:\"center\",backgroundImage:`linear-gradient(to right,#86BFF0,#52FFFF)`,padding:\"50px\",borderRadius:'10px'}}>\r\n      <OTPInput value={OTP} onChange={setOTP} autoFocus OTPLength={4} otpType=\"number\" disabled={false}/>\r\n      <ResendOTP maxTime=\"40\" renderButton={renderButton} renderTime={renderTime} style={{marginTop:\"10px\", justifyContent:\"space-around\", alignItems:\"center\"}} onResendClick={resendOtp} />\r\n      <Button variant='Contained' style={{backgroundColor:\"blue\", color:\"white\", margin:\"10px\"}} onClick={sendOtp}>Submit otp</Button> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OTPModule"],"names":["SignUpFrom","state","name","fatherName","email","enrollmentNo","dob","mobileNo","password","confirmPassword","nameErr","fatherNameErr","emailErr","enrollmentNoErr","dobErr","mobileNoErr","passwordErr","confirmPasswordErr","passwordMatched","allDataEntered","otpSent","otpVerifiedSuccessfully","backErr","backErrMsg","severity","alreadyRegistered","isLoading","navigateToSignIn","setTimeout","setState","updateEmail","event","validator","target","value","updateMobilenumber","updateDob","reset","callForOtp","options","url","process","method","headers","data","father_name","enrollment","mobile","confirm_password","date_of_birth","format","Date","axios","response","console","log","msg","onSubmit","registerForm","Box","className","style","padding","display","flexDirection","width","id","required","size","placeholder","margin","onChange","toUpperCase","error","type","justifyContent","marginTop","Button","onClick","variant","color","fontSize","fontWeight","verifyotp","otp","status","request","detail","handleClose","this","ThemeProvider","theme","height","src","logopng","alt","registrationt","resendOtp","to","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","sx","Component","createTheme","palette","regTextField","main","contrastText","lableText","success","CssTextField","styled","TextField","border","borderColor","Select","backgroundColor","LoadingView","props","zIndex","drawer","renderButton","buttonProps","renderTime","remainingtime","useState","OTP","setOTP","alignItems","backgroundImage","borderRadius","autoFocus","OTPLength","otpType","disabled","ResendOTP","maxTime","onResendClick"],"sourceRoot":""}