{"version":3,"file":"static/js/516.0a1caa96.chunk.js","mappings":"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","sources":["components/forgetPassword/index.js","components/loadingView/index.js","components/otphandler/index.js"],"sourcesContent":["import {Component} from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Box,TextField,Button,Snackbar,Alert } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport registrationt from \"../../assects/registrationt.png\"\r\nimport logopng from '../../assects/logopng.png'\r\n\r\nimport OTPModule from \"../otphandler\"\r\nimport LoadingView from '../loadingView';\r\n\r\nimport \"./index.css\"\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    regTextField: {\r\n      // Purple and green play nicely together.\r\n      main: \"#1173ef\",\r\n      contrastText: '#fff',\r\n    },\r\n    success: {\r\n      // This is green.A700 as hex.\r\n      main: '#11cb5f',\r\n      contrastText: '#ffffff',\r\n    },\r\n    reset:{\r\n        main: '#FFE6CC',\r\n        contrastText: '#D46300',\r\n    }\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nclass ForgotPassword extends Component{\r\n   state={  enrollmentNo:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            enrollmentNoErr:false,\r\n            passwordErr:false,\r\n            confirmPasswordErr:false,\r\n            passwordMatched:true,\r\n            allDataEntered:false,\r\n            otpSent:false,\r\n            otpVerifiedSuccessfully:false,\r\n            backErr:false,\r\n            backErrMsg:\"\",\r\n            severity:\"\",\r\n            isLoading:false,\r\n            alreadyRegistered:false\r\n        }\r\n\r\n        navigateToSignIn=()=>{\r\n           setTimeout(() => {\r\n                this.setState({otpVerifiedSuccessfully:true});\r\n            }, 3000);\r\n        }\r\n\r\n        reset=()=>{\r\n            this.setState({ \r\n                            enrollmentNo:\"\",\r\n                            password:\"\",\r\n                            confirmPassword:\"\",\r\n                            enrollmentNoErr:false,\r\n                            passwordErr:false,\r\n                            confirmPasswordErr:false,\r\n                        })\r\n        }\r\n\r\n        callForOtp=async ()=>{\r\n            const {password,enrollmentNo}=this.state\r\n            try{\r\n                const options = {\r\n                url:`${process.env.REACT_APP_BASEURL}account/reset-password/`,\r\n                method:\"POST\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json;charset=UTF-8'\r\n                    },\r\n                data:{  enrollment: enrollmentNo,\r\n                        new_password:password,\r\n                        confirm_new_password: password,\r\n                    }\r\n            }\r\n            const response = await axios(options)\r\n                console.log(response)\r\n                this.setState({otpSent:true,isLoading:false})\r\n            }catch(e){\r\n                if(e.response.status===500){\r\n          this.setState({isLoading:false,backErr:true,backErrMsg:\"Unregistered user... Please sign up\"})\r\n            }else{\r\n                this.setState({backErr:true,backErrMsg:`${e.message}...Please try again`,isLoading:false,severity:\"error\"})\r\n            }\r\n        }\r\n            \r\n        }\r\n\r\n        onSubmit=()=>{\r\n            const {enrollmentNo,password,confirmPassword} = this.state\r\n            this.setState({isLoading:true})\r\n            if(enrollmentNo===\"\"){\r\n                this.setState({enrollmentNoErr:true})\r\n            }\r\n            if(enrollmentNo!==\"\"){\r\n                this.setState({enrollmentNoErr:false})\r\n            }\r\n            if(password===\"\"){\r\n                this.setState({passwordErr:true})\r\n            }\r\n            if(password!==\"\"){\r\n                this.setState({passwordErr:false})\r\n            }\r\n            if(confirmPassword===\"\"){\r\n                this.setState({confirmPasswordErr:true})\r\n            }\r\n            if(confirmPassword!==\"\"){\r\n                this.setState({confirmPasswordErr:false})\r\n            }\r\n            if(password === confirmPassword){\r\n                this.setState({passwordMatched:true})\r\n            }\r\n            if(password!==confirmPassword){\r\n                this.setState({passwordMatched:false})\r\n            }\r\n            if(enrollmentNo!==\"\" && password===confirmPassword && password!==\"\" && confirmPassword!==''){\r\n                this.setState({allDataEntered:true},this.callForOtp)\r\n            }\r\n            else{this.setState({isLoading:false})}\r\n        }\r\n\r\n        passwordResetForm=()=>{\r\n            const { enrollmentNo,\r\n                    enrollmentNoErr,\r\n                    password,\r\n                    confirmPassword,\r\n                    passwordErr,\r\n                    confirmPasswordErr,\r\n                    passwordMatched}=this.state\r\n            return(\r\n                <Box className=\"registrationForm\"> \r\n                        <h1 style={{padding:\"10px\"}}>Reset Password</h1>\r\n\r\n    {/* enrollmentNo */}\r\n                        <TextField\r\n                            required\r\n                             size=\"small\"\r\n                            id=\"reg-father-enroll\"\r\n                            label=\"Enrollment Number\"\r\n                            style={{margin:\"10px\",width:\"90%\"}}\r\n                            onChange={(event)=>this.setState({enrollmentNo:event.target.value.toUpperCase()})}\r\n                            value={enrollmentNo}\r\n                            error={enrollmentNoErr}\r\n                            />\r\n{/* password */}\r\n                        <TextField\r\n                            required\r\n                             size=\"small\"\r\n                            id=\"reg-student-password\"\r\n                            label=\"New Password\"\r\n                            style={{margin:\"10px\",width:\"90%\"}}\r\n                            value={password}\r\n                            onChange={(event)=>this.setState({password:event.target.value})}\r\n                            error={passwordErr}\r\n                            />\r\n{/* confirm password */}\r\n                        <TextField\r\n                            required\r\n                             size=\"small\"\r\n                            id=\"reg-student-ConfirmPassword\"\r\n                            label=\"Confirm Password\"\r\n                            style={{margin:\"10px\",width:\"90%\"}}\r\n                            value={confirmPassword}\r\n                            onChange={(event)=>this.setState({confirmPassword:event.target.value})}\r\n                            error={confirmPasswordErr}\r\n                            />\r\n                        {passwordMatched?null:<p>Passwords not Matched</p>}\r\n                        <div style={{width:\"80%\", display:\"flex\", justifyContent:\"space-around\",marginTop:\"20px\"}}>\r\n                            <Button onClick={this.reset} variant=\"contained\" color=\"reset\">Reset</Button>\r\n                            <Button onClick={this.onSubmit} variant=\"contained\" color=\"success\">\r\n                                Update Password\r\n                            </Button>\r\n                        </div>\r\n                        <Button onClick={()=>this.setState({alreadyRegistered:true})}>Click me to signin page</Button>\r\n                        </Box>\r\n            )\r\n        }\r\n\r\n        verifyotp=async(otp)=>{\r\n            try{\r\n                const {enrollmentNo}=this.state\r\n                const options = {\r\n                    url : `${process.env.REACT_APP_BASEURL}account/verify-reset-password/`,\r\n                    method:\"POST\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                        },\r\n                    data:{\r\n                            enrollment: enrollmentNo,\r\n                            otp:otp\r\n                        }\r\n                    }\r\n                const response = await axios(options)\r\n                if(response.status===200){\r\n                    this.setState({backErr:true,\r\n                                    backErrMsg:\"Password Changed Successfully. Please login to Continue\",\r\n                                    severity:'success'},this.navigateToSignIn)\r\n                }\r\n            }catch(e){\r\n                if(e.response.request.status===403){\r\n                    this.setState({backErr:true,backErrMsg:e.response.data.detail.toUpperCase(),severity:'error'})\r\n                }else{\r\n                    this.setState({backErr:true,backErrMsg:e.msg})\r\n                }\r\n                \r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        handleClose=()=>{\r\n            this.setState({backErr:false})\r\n        }\r\n\r\n    render(){\r\n        const{otpSent,otpVerifiedSuccessfully,backErr,backErrMsg,severity,isLoading,alreadyRegistered}=this.state\r\n        return(\r\n            <>\r\n            {alreadyRegistered?<Navigate to='/student/signin'/>:null}\r\n             <ThemeProvider theme={theme}>\r\n                <div className='SignupMainPage'>\r\n                    <img style={{height:'150px'}} className='universityLogo' src={logopng} alt=\"logo\"/>\r\n                    <img className='registrationImage' src={registrationt} alt='regImage'/>\r\n                    {otpSent?<OTPModule resendOtp={this.callForOtp} verifyotp={this.verifyotp} />:this.passwordResetForm()}\r\n                    {otpVerifiedSuccessfully?<Navigate to=\"/student/signin\"/>:null}\r\n                </div>  \r\n            </ThemeProvider>\r\n            <Snackbar open={backErr}\r\n                        autoHideDuration={6000} \r\n                        onClose={this.handleClose} \r\n                        anchorOrigin={{vertical:\"top\",horizontal:\"right\"}} \r\n                        >\r\n                <Alert onClose={this.handleClose} severity={severity} sx={{ width: '100%' }}>\r\n                  {backErrMsg}\r\n                </Alert>\r\n              </Snackbar>\r\n              <LoadingView isLoading={isLoading}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword","import {Component} from 'react'\r\nimport { Backdrop,CircularProgress } from '@mui/material'\r\n\r\nclass LoadingView extends Component{\r\n    render(){\r\n        const{isLoading}=this.props\r\n        return(\r\n            <Backdrop\r\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={isLoading}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadingView\r\n","/* eslint-disable no-sequences */\r\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\r\nimport {Button} from \"@mui/material\"\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst renderButton = (buttonProps) => {\r\n  return <Button {...buttonProps} size=\"small\">Resend</Button>;\r\n};\r\nconst renderTime = (remainingtime) => {\r\n  return <span>{remainingtime} seconds remaining</span>;\r\n};\r\n\r\n\r\nfunction OTPModule(props) {\r\n\r\n  const [OTP, setOTP] = useState(\"\");\r\n\r\n      const sendOtp=()=>{\r\n            const {verifyotp}=props\r\n            verifyotp(OTP)\r\n      }\r\n  \r\n      const resendOtp=()=>{\r\n        const {resendOtp}=props\r\n        resendOtp()\r\n      }\r\n\r\n  return (\r\n    <div style={{display:\"flex\", flexDirection:\"column\",width:'300px',justifyContent:\"center\",alignItems:\"center\",backgroundImage:`linear-gradient(to right,#86BFF0,#52FFFF)`,padding:\"50px\",borderRadius:'10px'}}>\r\n      <OTPInput value={OTP} onChange={setOTP} autoFocus OTPLength={4} otpType=\"number\" disabled={false}/>\r\n      <ResendOTP maxTime=\"40\" renderButton={renderButton} renderTime={renderTime} style={{marginTop:\"10px\", justifyContent:\"space-around\", alignItems:\"center\"}} onResendClick={resendOtp} />\r\n      <Button variant='Contained' style={{backgroundColor:\"blue\", color:\"white\", margin:\"10px\"}} onClick={sendOtp}>Submit otp</Button> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OTPModule"],"names":["theme","createTheme","palette","regTextField","main","contrastText","success","reset","ForgotPassword","state","enrollmentNo","password","confirmPassword","enrollmentNoErr","passwordErr","confirmPasswordErr","passwordMatched","allDataEntered","otpSent","otpVerifiedSuccessfully","backErr","backErrMsg","severity","isLoading","alreadyRegistered","navigateToSignIn","setTimeout","setState","callForOtp","options","url","process","method","headers","data","enrollment","new_password","confirm_new_password","axios","response","console","log","status","message","onSubmit","passwordResetForm","Box","className","style","padding","TextField","required","size","id","label","margin","width","onChange","event","target","value","toUpperCase","error","display","justifyContent","marginTop","Button","onClick","variant","color","verifyotp","otp","request","detail","msg","handleClose","this","to","ThemeProvider","height","src","logopng","alt","registrationt","resendOtp","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","sx","Component","LoadingView","props","zIndex","drawer","renderButton","buttonProps","renderTime","remainingtime","useState","OTP","setOTP","flexDirection","alignItems","backgroundImage","borderRadius","autoFocus","OTPLength","otpType","disabled","ResendOTP","maxTime","onResendClick","backgroundColor"],"sourceRoot":""}